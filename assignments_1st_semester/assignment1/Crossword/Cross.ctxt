#BlueJ class context
comment0.target=Cross
comment0.text=\r\n\ Creates\ a\ cross.\r\n\ Eleni\ Stylianou\ ge21708\r\n\ 27/11/2021\r\n
comment1.params=noRows\ noColumns
comment1.target=Cross(int,\ int)
comment1.text=\r\n\ Constructor\ of\ Cross\r\n\ noColumns\ -\ Number\ of\ Columns\r\n\ noRows\ -\ Number\ of\ Rows\r\n\ newInitChar\ -\ Initial\ character\ We\ fill\ cross\ with\ this\ character\ e.g.\ '_'\r\n
comment10.params=
comment10.target=void\ resetCross()
comment10.text=\r\n\ Reset\ Cross\ with\ initial\ character\ Fill\ Cross\ with\ initial\ character\ \r\n
comment11.params=
comment11.target=char[][]\ getCross()
comment11.text=\r\n\ Returns\ the\ cross\ as\ a\ two-dimensional\ table\r\n
comment2.params=aWord\ x\ y\ d
comment2.target=boolean\ isLegal(java.lang.String,\ int,\ int,\ char)
comment2.text=\r\n\ Check\ if\ word\ can\ put\ in\ (x,y)\ position\ and\ in\ Vertical\ or\ Horizontal\ direction\ if\ word\ can\ put\ in\ (x,y)\ position\ and\ in\ Vertical\ or\ Horizontal\ direction\ method\ return\ true\ else\ return\ false\r\n\ aWord\ -\ the\ word\ that\ we\ want\ to\ add\ in\ Cross\r\n\ x\ -\ the\ row\ that\ we\ want\ to\ add\ the\ word\r\n\ y\ -\ the\ column\ that\ we\ want\ to\ add\ the\ word\r\n\ d\ -\ the\ direction\ that\ we\ want\ to\ add\ the\ word\ (values\ 'H'\ for\ Horizontal\ 'V'\ for\ Vertical)\r\n
comment3.params=aWord\ x\ y\ d
comment3.target=Word\ findLegal(java.lang.String,\ int,\ int,\ char)
comment3.text=\r\n\ Find\ the\ first\ position\ where\ the\ word\ can\ be\ added\ AFTER\ a\ spesific\ position\r\n\ aWord\ -\ the\ word\ that\ we\ want\ to\ add\ in\ Croos\r\n\ x\ -\ the\ row\ that\ we\ want\ to\ add\ the\ word\r\n\ y\ -\ the\ column\ that\ we\ want\ to\ add\ the\ word\r\n\ d\ -\ the\ direction\ that\ we\ want\ to\ add\ the\ word\ (values\ 'H'\ for\ Horizontal\ 'V'\ for\ Vertical)\r\n
comment4.params=aWord
comment4.target=Word\ findLegalInAllCross(java.lang.String)
comment4.text=\r\n\ Find\ position\ in\ all\ Cross\ where\ word\ can\ be\ added\ We\ select\ a\ random\ (x,y)\ position\ and\ a\ random\ direction\ and\ we\ use\ findLegal\ method\ to\ find\ if\ word\ can\ be\ added\ in\ Cross\r\n\ aWord\ -\ the\ word\ that\ we\ want\ to\ add\ in\ Cross\r\n
comment5.params=aWord\ x\ y\ d
comment5.target=void\ placeWord(java.lang.String,\ int,\ int,\ char)
comment5.text=\r\n\ Place\ word\ in\ a\ spesific\ position\ and\ direction\ in\ Cross\ Place\ the\ word\ in\ Cross\ and\ add\ the\ Word\ to\ Solution\ ArrayList\r\n\ aWord\ -\ the\ word\ that\ we\ want\ to\ place\ in\ Cross\r\n\ x\ -\ the\ row\ that\ we\ want\ to\ place\ the\ word\r\n\ y\ -\ the\ column\ that\ we\ want\ to\ plce\ the\ word\r\n\ d\ -\ the\ direction\ that\ we\ want\ to\ place\ the\ word\ (values\ 'H'\ for\ Horizontal\ 'V'\ for\ Vertical)\r\n
comment6.params=
comment6.target=void\ FillRemaining()
comment6.text=\r\n\ Fill\ Cross\ (empties\ position)\ with\ random\ characters\r\n
comment7.params=wordList
comment7.target=void\ fillCrossFromArrayList(java.util.ArrayList)
comment7.text=\r\n\ Fill\ Cross\ with\ a\ dictionary\r\n\ wordFill\ Cross\ with\ a\ dictionary\r\n
comment8.params=
comment8.target=void\ PrintCross()
comment8.text=\r\n\ Print\ Cross\r\n
comment9.params=
comment9.target=void\ PrintSolution()
comment9.text=\r\n\ Print\ the\ Solution\r\n
numComments=12
