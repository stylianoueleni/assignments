#BlueJ class context
comment0.target=Tree
comment0.text=\r\n\ An\ interface\ for\ a\ tree\ where\ nodes\ can\ have\ an\ arbitrary\ number\ of\ children.\r\n\r\n\ @author\ Michael\ T.\ Goodrich\r\n\ @author\ Roberto\ Tamassia\r\n\ @author\ Michael\ H.\ Goldwasser\r\n
comment1.params=
comment1.target=Position\ root()
comment1.text=\r\n\ Returns\ the\ root\ Position\ of\ the\ tree\ (or\ null\ if\ tree\ is\ empty).\r\n\ @return\ root\ Position\ of\ the\ tree\ (or\ null\ if\ tree\ is\ empty)\r\n
comment10.params=
comment10.target=java.util.Iterator\ iterator()
comment10.text=\r\n\ Returns\ an\ iterator\ of\ the\ elements\ stored\ in\ the\ tree.\r\n\ @return\ iterator\ of\ the\ tree's\ elements\r\n
comment11.params=
comment11.target=java.lang.Iterable\ positions()
comment11.text=\r\n\ Returns\ an\ iterable\ collection\ of\ the\ positions\ of\ the\ tree.\r\n\ @return\ iterable\ collection\ of\ the\ tree's\ positions\r\n
comment2.params=p
comment2.target=Position\ parent(Position)
comment2.text=\r\n\ Returns\ the\ Position\ of\ p's\ parent\ (or\ null\ if\ p\ is\ root).\r\n\r\n\ @param\ p\ \ \ \ A\ valid\ Position\ within\ the\ tree\r\n\ @return\ Position\ of\ p's\ parent\ (or\ null\ if\ p\ is\ root)\r\n\ @throws\ IllegalArgumentException\ if\ p\ is\ not\ a\ valid\ Position\ for\ this\ tree.\r\n
comment3.params=p
comment3.target=java.lang.Iterable\ children(Position)
comment3.text=\r\n\ Returns\ an\ iterable\ collection\ of\ the\ Positions\ representing\ p's\ children.\r\n\r\n\ @param\ p\ \ \ \ A\ valid\ Position\ within\ the\ tree\r\n\ @return\ iterable\ collection\ of\ the\ Positions\ of\ p's\ children\r\n\ @throws\ IllegalArgumentException\ if\ p\ is\ not\ a\ valid\ Position\ for\ this\ tree.\r\n
comment4.params=p
comment4.target=int\ numChildren(Position)
comment4.text=\r\n\ Returns\ the\ number\ of\ children\ of\ Position\ p.\r\n\r\n\ @param\ p\ \ \ \ A\ valid\ Position\ within\ the\ tree\r\n\ @return\ number\ of\ children\ of\ Position\ p\r\n\ @throws\ IllegalArgumentException\ if\ p\ is\ not\ a\ valid\ Position\ for\ this\ tree.\r\n
comment5.params=p
comment5.target=boolean\ isInternal(Position)
comment5.text=\r\n\ Returns\ true\ if\ Position\ p\ has\ one\ or\ more\ children.\r\n\r\n\ @param\ p\ \ \ \ A\ valid\ Position\ within\ the\ tree\r\n\ @return\ true\ if\ p\ has\ at\ least\ one\ child,\ false\ otherwise\r\n\ @throws\ IllegalArgumentException\ if\ p\ is\ not\ a\ valid\ Position\ for\ this\ tree.\r\n
comment6.params=p
comment6.target=boolean\ isExternal(Position)
comment6.text=\r\n\ Returns\ true\ if\ Position\ p\ does\ not\ have\ any\ children.\r\n\r\n\ @param\ p\ \ \ \ A\ valid\ Position\ within\ the\ tree\r\n\ @return\ true\ if\ p\ has\ zero\ children,\ false\ otherwise\r\n\ @throws\ IllegalArgumentException\ if\ p\ is\ not\ a\ valid\ Position\ for\ this\ tree.\r\n
comment7.params=p
comment7.target=boolean\ isRoot(Position)
comment7.text=\r\n\ Returns\ true\ if\ Position\ p\ represents\ the\ root\ of\ the\ tree.\r\n\r\n\ @param\ p\ \ \ \ A\ valid\ Position\ within\ the\ tree\r\n\ @return\ true\ if\ p\ is\ the\ root\ of\ the\ tree,\ false\ otherwise\r\n\ @throws\ IllegalArgumentException\ if\ p\ is\ not\ a\ valid\ Position\ for\ this\ tree.\r\n
comment8.params=
comment8.target=int\ size()
comment8.text=\r\n\ Returns\ the\ number\ of\ nodes\ in\ the\ tree.\r\n\ @return\ number\ of\ nodes\ in\ the\ tree\r\n
comment9.params=
comment9.target=boolean\ isEmpty()
comment9.text=\r\n\ Tests\ whether\ the\ tree\ is\ empty.\r\n\ @return\ true\ if\ the\ tree\ is\ empty,\ false\ otherwise\r\n
numComments=12
