#BlueJ class context
comment0.target=HeapPriorityQueue
comment0.text=\r\n\ An\ implementation\ of\ a\ priority\ queue\ using\ an\ array-based\ heap.\r\n\r\n\ @author\ Michael\ T.\ Goodrich\r\n\ @author\ Roberto\ Tamassia\r\n\ @author\ Michael\ H.\ Goldwasser\r\n
comment1.params=
comment1.target=HeapPriorityQueue()
comment1.text=Creates\ an\ empty\ priority\ queue\ based\ on\ the\ natural\ ordering\ of\ its\ keys.
comment10.params=j
comment10.target=void\ upheap(int)
comment10.text=Moves\ the\ entry\ at\ index\ j\ higher,\ if\ necessary,\ to\ restore\ the\ heap\ property.
comment11.params=j
comment11.target=void\ downheap(int)
comment11.text=Moves\ the\ entry\ at\ index\ j\ lower,\ if\ necessary,\ to\ restore\ the\ heap\ property.
comment12.params=
comment12.target=void\ heapify()
comment12.text=Performs\ a\ bottom-up\ construction\ of\ the\ heap\ in\ linear\ time.
comment13.params=
comment13.target=int\ size()
comment13.text=\r\n\ Returns\ the\ number\ of\ items\ in\ the\ priority\ queue.\r\n\ @return\ number\ of\ items\r\n
comment14.params=
comment14.target=Entry\ min()
comment14.text=\r\n\ Returns\ (but\ does\ not\ remove)\ an\ entry\ with\ minimal\ key.\r\n\ @return\ entry\ having\ a\ minimal\ key\ (or\ null\ if\ empty)\r\n
comment15.params=key\ value
comment15.target=Entry\ insert(java.lang.Object,\ java.lang.Object)
comment15.text=\r\n\ Inserts\ a\ key-value\ pair\ and\ return\ the\ entry\ created.\r\n\ @param\ key\ \ \ \ \ the\ key\ of\ the\ new\ entry\r\n\ @param\ value\ \ \ the\ associated\ value\ of\ the\ new\ entry\r\n\ @return\ the\ entry\ storing\ the\ new\ key-value\ pair\r\n\ @throws\ IllegalArgumentException\ if\ the\ key\ is\ unacceptable\ for\ this\ queue\r\n
comment16.params=
comment16.target=Entry\ removeMin()
comment16.text=\r\n\ Removes\ and\ returns\ an\ entry\ with\ minimal\ key.\r\n\ @return\ the\ removed\ entry\ (or\ null\ if\ empty)\r\n
comment17.params=
comment17.target=void\ sanityCheck()
comment17.text=Used\ for\ debugging\ purposes\ only
comment2.params=comp
comment2.target=HeapPriorityQueue(java.util.Comparator)
comment2.text=\r\n\ Creates\ an\ empty\ priority\ queue\ using\ the\ given\ comparator\ to\ order\ keys.\r\n\ @param\ comp\ comparator\ defining\ the\ order\ of\ keys\ in\ the\ priority\ queue\r\n
comment3.params=keys\ values
comment3.target=HeapPriorityQueue(java.lang.Object[],\ java.lang.Object[])
comment3.text=\r\n\ Creates\ a\ priority\ queue\ initialized\ with\ the\ respective\r\n\ key-value\ pairs.\ \ The\ two\ arrays\ given\ will\ be\ paired\r\n\ element-by-element.\ They\ are\ presumed\ to\ have\ the\ same\r\n\ length.\ (If\ not,\ entries\ will\ be\ created\ only\ up\ to\ the\ length\ of\r\n\ the\ shorter\ of\ the\ arrays)\r\n\ @param\ keys\ an\ array\ of\ the\ initial\ keys\ for\ the\ priority\ queue\r\n\ @param\ values\ an\ array\ of\ the\ initial\ values\ for\ the\ priority\ queue\r\n
comment4.params=j
comment4.target=int\ parent(int)
comment5.params=j
comment5.target=int\ left(int)
comment6.params=j
comment6.target=int\ right(int)
comment7.params=j
comment7.target=boolean\ hasLeft(int)
comment8.params=j
comment8.target=boolean\ hasRight(int)
comment9.params=i\ j
comment9.target=void\ swap(int,\ int)
comment9.text=Exchanges\ the\ entries\ at\ indices\ i\ and\ j\ of\ the\ array\ list.
numComments=18
